{
  "hash": "17df59ba358bfeba715e67a4809aa707",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Setting up simulations in R\"\nauthor:\n  - Julie Aubert\n  - Caroline Cognot\n  - Annaïg De Walsche\n  - Cédric Midoux\n  - Pierre Neuvial\n  - Aymeric Stamm\n  - Florian Teste\ndate: 2024-08-19\ntoc: true\n---\n\n\n\n\n## Overview\n\nWe explore several R packages for generate or structure simulations. Most\nstatistical simulations studies includes different steps : generate data/ run\none or several methods using simulated data / compare results.\n\nWe identified the following list of packages for data simulation:\n\n-   [{**simulator**}](https://jacobbien.github.io/simulator/): A framework for \nperforming simulations such as those common in methodological statistics papers. \nThe design principles of this package are described in greater depth in Bien, \nJ. (2016) \"The simulator: An Engine to Streamline Simulations,\" which is available \nat <doi:10.48550/arXiv.1607.00021>.\n-   [{**simpr**}](https://statisfactions.github.io/simpr/): A general, \n'tidyverse'-friendly framework for simulation studies, design analysis, and \npower analysis. Specify data generation, define varying parameters, generate \ndata, fit models, and tidy model results in a single pipeline, without needing \nloops or custom functions.\n-   [{**DeclareDesign**}](https://declaredesign.org/r/declaredesign/): \nResearchers can characterize and learn about the properties of research designs \nbefore implementation using 'DeclareDesign'. Ex ante declaration and diagnosis \nof designs can help researchers clarify the strengths and limitations of their \ndesigns and to improve their properties, and can help readers evaluate a \nresearch strategy prior to implementation and without access to results. It can \nalso make it easier for designs to be shared, replicated, and critiqued.\n-   [{**MonteCarlo**}](https://github.com/FunWithR/MonteCarlo): Simplifies Monte \nCarlo simulation studies by automatically setting up loops to run over parameter \ngrids and parallelising the Monte Carlo repetitions. It also generates LaTeX \ntables.\n-   [{**simChef**}](https://yu-group.github.io/simChef/index.html): The goal is \nto help you quickly cook up a fully-realized, high-quality, reproducible, and \ntransparently-documented simulation study in a flexible, efficient, and low-code \nmanner. It removes many of the administrative burdens of simulation design \nthrough:\n\n    1. An intuitive tidy grammar of data science simulations\n    2. Powerful abstractions for distributed simulation processing backed by future\n    3. Automated generation of interactive R Markdown simulation documentation, situating results next to the workflows needed to reproduce them.\n-   [{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html): An open-source R package for structuring, maintaining, running, and debugging \nstatistical simulations on both local and cluster-based computing environments. \nSee full documentation at <https://avi-kenny.github.io/SimEngine/>.\n\n## How to choose?\n\nHere is a comparison of the different packages summarised in a table:\n\n| Name                                                                                        | Version | #deps | #rev deps | Latest commit | Latest release | Doc | On CRAN? | Developers                   |\n|--------------|--------|--------|--------|--------|--------|--------|--------|--------|\n| [{**DeclareDesign**}](https://declaredesign.org/r/declaredesign/)                             | 1.0.10  | 2     | 1         | 2024-04-13    | 2024-04-21     |     | Yes      | Graeme Blair                 |\n| [{**MonteCarlo**}](https://github.com/FunWithR/MonteCarlo)                                    | 1.0.6   | 6     | 0         | 2019-01-31    | 2019-01-31     |     | Yes      | Christian Hendrik Leschinski |\n| [{**simChef**}](https://yu-group.github.io/simChef/index.html)                                | 0.1.0   | 22    | 0         | 2024-03-20    | NA             |     | No       | Tiffany Tang, James Duncan   |\n| [{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html) | 1.4.0   | 6     | 0         | 2024-04-13    | 2024-04-04     |     | Yes      | Avi Kenny, Charles Wolock    |\n| [{**simpr**}](https://statisfactions.github.io/simpr/)                                        | 0.2.6   | 11    | 0         | 2024-07-16    | 2023-04-26     |     | Yes      | Ethan Brown                  |\n| [{**simulator**}](https://jacobbien.github.io/simulator/)                                     | 0.2.5   | 1     | 0         | 2023-02-02    | 2023-02-04     |     | Yes      | Jacob Bien                   |\n\nThis table shows that all packages are on CRAN, except for\n[{**simChef**}](https://yu-group.github.io/simChef/index.html). The latest\nrelease of [{**simChef**}](https://yu-group.github.io/simChef/index.html) is not\navailable, but the latest commit was in March 2024 so it is actively maintained.\nThe number of dependencies is quite high for\n[{**simChef**}](https://yu-group.github.io/simChef/index.html) and\n[{**simpr**}](https://statisfactions.github.io/simpr/). The number of reverse\ndependencies is low for all packages. The package\n[{**MonteCarlo**}](https://github.com/FunWithR/MonteCarlo) seams not to be\nmaintained anymore.\n\nAlso, in terms of philosophy, the\n[{**DeclareDesign**}](https://declaredesign.org/r/declaredesign/) package is\ndedicated to *experimental design*. It also makes it possible to simulate an\nexperimental design of interest, in order to understand the properties of this\ndesign. As its goal is not to evaluate computational methods via simulations, it\ndoes not address the question of interest and we did not evaluate it further.\nThe underlying experimental design principles are described in the companion\nbook: https://book.declaredesign.org/.\n\nIn the following, we will therefore focus on the packages\n[{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html),\n[{**simChef**}](https://yu-group.github.io/simChef/index.html),\n[{**simpr**}](https://statisfactions.github.io/simpr/), and\n[{**simulator**}](https://jacobbien.github.io/simulator/). The next section\ndescribes the common simulation problem we will use to compare the packages.\nThen, we will show how to solve this problem with each package. Finally, we will\ncompare the packages based on the code, the output, and the ease of use.\n\n## A common simulation problem: power curve for test calibration\n\nWe consider a common simulation problem: power curve estimation for hypothesis\ntest calibration.\n\nWe consider a two-sample paired t-test simple example. The first sample is\ngenerated from a normal distribution with mean `0` and standard deviation `sd`.\nThe second sample is generated from a normal distribution with mean `mean_diff`\nand standard deviation `sd`. The sample size is `n`. We want to estimate the\npower of the paired t-test for different values of `mean_diff` and `ds`.\nSpecifically, we will use the following parameters:\n\n-   `n`: 100, 150, 200;\n-   `mean_diff`: 10, 20, 30;\n-   `sd`: 50, 100.\n\nWe will estimate the power by simulating the paired t-test for each combination\nof parameters. We will repeat the simulation 10 times for each combination of\nparameters.\n\nThe base R solution for this problem can look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Set up parameters\nns <- c(100L, 150L, 200L)\nmean_diffs <- c(10, 20, 30)\nsds <- c(50, 100)\nreps <- 10L\n\n## Bring together into data frame\nresults_template <- expand.grid(\n  n = ns, \n  mean_diff = mean_diffs, \n  sd = sds, \n  p.value = NA_real_\n)\nbase_r_sim <- results_template[rep(1:nrow(results_template), each = reps), ]\n\n## Loop over rows of the data frame and calculate the p-value\nfor (i in 1:nrow(results_template)) {\n  params <- base_r_sim[i,]\n  pre <- rnorm(params$n, 0, params$sd)\n  post <- pre + rnorm(params$n, params$mean_diff, params$sd)\n  base_r_sim$p.value[i] <- t.test(pre, post)$p.value\n}\n\n## Display table output\nDT::datatable(base_r_sim)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-087dbad6e6e6c8690585\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-087dbad6e6e6c8690585\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"1.1\",\"1.2\",\"1.3\",\"1.4\",\"1.5\",\"1.6\",\"1.7\",\"1.8\",\"1.9\",\"2\",\"2.1\",\"2.2\",\"2.3\",\"2.4\",\"2.5\",\"2.6\",\"2.7\",\"2.8\",\"2.9\",\"3\",\"3.1\",\"3.2\",\"3.3\",\"3.4\",\"3.5\",\"3.6\",\"3.7\",\"3.8\",\"3.9\",\"4\",\"4.1\",\"4.2\",\"4.3\",\"4.4\",\"4.5\",\"4.6\",\"4.7\",\"4.8\",\"4.9\",\"5\",\"5.1\",\"5.2\",\"5.3\",\"5.4\",\"5.5\",\"5.6\",\"5.7\",\"5.8\",\"5.9\",\"6\",\"6.1\",\"6.2\",\"6.3\",\"6.4\",\"6.5\",\"6.6\",\"6.7\",\"6.8\",\"6.9\",\"7\",\"7.1\",\"7.2\",\"7.3\",\"7.4\",\"7.5\",\"7.6\",\"7.7\",\"7.8\",\"7.9\",\"8\",\"8.1\",\"8.2\",\"8.3\",\"8.4\",\"8.5\",\"8.6\",\"8.7\",\"8.8\",\"8.9\",\"9\",\"9.1\",\"9.2\",\"9.3\",\"9.4\",\"9.5\",\"9.6\",\"9.7\",\"9.8\",\"9.9\",\"10\",\"10.1\",\"10.2\",\"10.3\",\"10.4\",\"10.5\",\"10.6\",\"10.7\",\"10.8\",\"10.9\",\"11\",\"11.1\",\"11.2\",\"11.3\",\"11.4\",\"11.5\",\"11.6\",\"11.7\",\"11.8\",\"11.9\",\"12\",\"12.1\",\"12.2\",\"12.3\",\"12.4\",\"12.5\",\"12.6\",\"12.7\",\"12.8\",\"12.9\",\"13\",\"13.1\",\"13.2\",\"13.3\",\"13.4\",\"13.5\",\"13.6\",\"13.7\",\"13.8\",\"13.9\",\"14\",\"14.1\",\"14.2\",\"14.3\",\"14.4\",\"14.5\",\"14.6\",\"14.7\",\"14.8\",\"14.9\",\"15\",\"15.1\",\"15.2\",\"15.3\",\"15.4\",\"15.5\",\"15.6\",\"15.7\",\"15.8\",\"15.9\",\"16\",\"16.1\",\"16.2\",\"16.3\",\"16.4\",\"16.5\",\"16.6\",\"16.7\",\"16.8\",\"16.9\",\"17\",\"17.1\",\"17.2\",\"17.3\",\"17.4\",\"17.5\",\"17.6\",\"17.7\",\"17.8\",\"17.9\",\"18\",\"18.1\",\"18.2\",\"18.3\",\"18.4\",\"18.5\",\"18.6\",\"18.7\",\"18.8\",\"18.9\"],[100,100,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],[0.3109551114771689,0.0651384295177681,0.8237449219606243,0.1763568129691215,0.2806301246474352,0.3827591639733354,0.5413347218574321,0.0482554083587961,0.145381050342604,0.8072426902746336,0.769199115069662,0.557659744390224,0.02300439415027606,0.4423356499615954,0.3618985398249701,0.3212632847947809,0.1143382971641187,0.09013840784322823,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>n<\\/th>\\n      <th>mean_diff<\\/th>\\n      <th>sd<\\/th>\\n      <th>p.value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"n\",\"targets\":1},{\"name\":\"mean_diff\",\"targets\":2},{\"name\":\"sd\",\"targets\":3},{\"name\":\"p.value\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## [{**simpr**}](https://statisfactions.github.io/simpr/)\n\nWhat is bad in the base R solution according to\n[{**simpr**}](https://statisfactions.github.io/simpr/) authors:\n\n-   Most important pieces (data generating process, model specification, \ndefinitions, varying parameters) are hidden;\n-   What if there is an error?\n-   What about parallelization?\n-   Is this code sufficiently readable? Without the comments?\n\n### [{**simpr**}](https://statisfactions.github.io/simpr/) solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimpr_tbl <- specify(\n  pre  = ~ rnorm(n, 0, sd),\n  post = ~ pre + rnorm(n, mean_diff, sd)\n) |> \n  define(n = ns, mean_diff = mean_diffs, sd = sds) |> \n  generate(reps, .progress = TRUE) |> \n  fit(t = ~ t.test(post, pre, paired = TRUE)) |> \n  tidy_fits()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'purrr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    set_names\n```\n\n\n:::\n\n```{.r .cell-code}\nDT::datatable(simpr_tbl)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-dee34b1ab6220b6c2961\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-dee34b1ab6220b6c2961\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\"],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],[100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200,100,150,200],[10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30,10,10,10,20,20,20,30,30,30],[50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,100,100,100,100,100,100,100,100,100],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],[\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\",\"t\"],[10.08060011351671,10.22482292336493,7.993227142152067,11.97804392585933,21.36194692822422,24.12318213623432,24.30936468051217,28.72357947222263,29.08533555022796,15.42915996662013,15.43163232891662,13.23427515614097,25.73845571109953,21.76570445628919,1.514636125511983,26.79103670050355,31.40816432211576,34.60104053109646,19.34336515186645,10.53566324936931,17.22786312385327,22.49454227144605,25.92416525135206,20.74818304342889,35.0683042422529,30.77759950980804,31.35858186047717,14.26286669064149,-1.045063161154226,0.4901552505939675,14.79017946408707,16.47600843153259,12.19256550802958,15.81250834327062,33.44075309461515,24.77094340419933,4.043399889656436,5.725073271872848,11.62712898190674,18.7521137608866,22.71134113556338,21.42493108343018,33.65983202659358,36.73997550097347,27.69597503494234,2.249625106124286,0.3634889193462931,6.791599123127989,24.80328116374022,16.13546881851686,16.5248036636044,19.76236954566929,45.23827961407249,40.03772688735942,13.63064640733916,9.46612208321795,8.275737906248484,26.98616553146115,18.85082813591624,15.77931470200711,38.47371377280275,34.03926165258216,27.90489057609451,9.241746665422529,9.41080842388152,8.667675359599237,19.65934835587047,20.98306887642042,23.579458755351,25.4379939922529,18.69662722485522,33.15717425343202,11.60329603133579,12.78954570508258,8.13488163353731,22.46559565025998,20.15028703355778,20.00070579517435,32.07909378947254,35.75328467169886,29.45939474509041,7.952832764338279,12.192013894219,6.291197288400781,40.7364539965678,27.69876259221587,21.03406933081768,20.16170394709445,33.79263610277553,37.16851670948162,10.48841213616971,1.95293242511378,12.68068234139506,11.4054001060111,22.89640648339547,21.52748599675062,27.29701194938724,23.56884389088732,28.00148880467836,15.25780402085116,12.41697402000785,11.76624767263873,29.62372303072692,11.91729749357526,18.64047358137275,31.88032648852985,24.85629350519581,28.57874446525665,2.12716584978314,9.982227913638672,3.897604741489457,12.4737232740322,17.27616338451161,21.9547080398392,25.01201476863593,29.35681615179309,33.73574474451271,10.50504061338625,0.3678966099024912,-0.7736049958709655,25.89500167429613,25.63952358217436,17.03328668309759,29.24301161172186,43.54805970913974,37.26714386733337,8.481506309930145,14.45595468148532,12.62965615863351,24.09745799307448,24.93668761842265,18.66788484684899,22.69593593443366,29.29542369151464,38.74100081970848,13.28750085197471,15.33635654661249,14.27737852965806,22.2612239521916,16.17828707884229,29.17183307903951,15.73716313560373,36.02192774704631,35.36044839935168,7.485781484373754,8.918377356290547,13.67660424766896,19.07661873208965,20.00853612233251,12.40683876213595,26.76479466551327,30.45449249754733,30.29393049662388,-7.435993985716694,19.8054403312812,9.003248266208955,7.544059256255019,18.96190960016353,22.00856127505821,26.88718519089562,38.18914526276453,35.01064137274754,9.927488260582155,7.188456930494127,9.094529859079007,15.34077980242075,22.56434860394726,25.57704132470213,36.94821804607631,31.47169261104302,36.50410775965083,19.20817655840967,18.62606703903043,12.06057189128387,13.9937862583622,23.86744901393124,14.58064863550078,29.56580217456122,33.20018431985495,36.28796366073522],[1.939226116643815,2.288030821654455,2.178621834323674,2.73128033165005,4.994701097122579,7.561721429556244,4.960499028068157,6.235119965716986,8.191674573814451,1.531647292250617,1.895861871267096,1.802601546546302,2.342348003619782,2.711419216015392,0.2265586322298639,2.536947601096226,3.520851187737251,4.676367320564231,3.947466958768752,2.734242153992282,5.218977796073309,4.617271039093228,6.799695530348343,5.756013032604983,7.235837731958973,7.742354673700247,9.055001122092266,1.38908147801417,-0.1275493207720874,0.07148549274984477,1.347257054267236,2.173536522175562,1.841763652163818,1.52128172341715,4.090127295293413,3.481701177497865,0.8140126166185541,1.371466467696197,3.157372896930416,4.257816286164804,5.670712840391346,5.828818801786312,6.384453965846826,8.192322766582818,7.73276697092914,0.2056741629156227,0.04281700770081878,1.027804701801528,2.383480303230831,2.092226976156132,2.305476355440037,1.944305556162963,4.874400961193007,5.409511541245479,2.869136986623232,2.528713265245693,2.304307373610666,5.354440451650555,4.597648754714835,4.479118156587791,7.233272572468223,8.01857742206712,7.769659552169447,0.9382918711673023,1.167487557980364,1.3095611073712,2.236913933705184,2.833766809280624,3.427035949953673,2.691163124135532,2.469353093663807,4.821808122793652,2.460552853120846,3.038036809504368,2.284602097199949,3.875997350025643,4.629403102648214,5.61912347522345,7.188690751768401,8.343782448403836,8.677611600985424,0.7525853174115507,1.337620054396879,0.7950185926319422,4.424855392460627,3.776811391642179,3.096310367518397,1.952633310101374,3.728200903013399,5.380070313913909,1.952296630233414,0.4353424398412729,3.6480634299443,2.504334192706033,6.035127609254751,6.259329087974199,6.011869281827988,5.604257852274752,7.461838127923023,1.525264502646154,1.421603045244598,1.753311002169623,3.01069716509491,1.420701579209056,2.563394331165251,3.114754708245559,2.977225778349826,3.695546581266408,0.4516782029380116,2.489252050450709,1.211290206304997,2.448279297527017,4.784476393028393,6.69714530109072,4.292708255264963,6.706604663289877,9.80544697177511,1.071931513452825,0.04007161028058871,-0.112760615850257,2.430786676916334,3.176723727973199,2.53132906182843,3.15768792842652,5.024752384401565,5.251501564795844,1.81269429284145,3.518557191687539,3.700796183819096,4.319320353395843,6.483039572109888,5.514024412441326,4.276286042472808,6.504488039332225,10.93594503231969,1.434673525752173,1.849326545883209,1.932544886873299,2.127783708215726,1.700232456544012,3.845789098960803,1.680022939725254,5.051075373727389,4.652255158492681,1.56114229674061,2.133990231847854,3.99981940643251,3.729638690007111,5.056661915975159,3.489330522867447,4.776668799667156,7.49247790194309,9.293121465836508,-0.7413132483771645,2.492110544538887,1.235415240169576,0.7055290049526068,2.300960840269544,3.089447565586549,2.801047674401355,4.734589680502594,4.894812005767454,2.034779830699531,1.714146044957489,2.429764902176182,2.702897229304369,5.278917804360916,7.340883887333151,6.639592200579234,8.539116744588291,10.41858080353268,1.867695312784312,2.282794887631452,1.615767933225837,1.356875649924616,3.184426553424954,2.000195166461112,2.814045106143585,3.963823335250874,4.957441434863906],[0.05532060146984028,0.02354243263142539,0.03053483156761243,0.00747058837557735,1.628795061741027e-06,1.432488915645577e-12,2.921054761232893e-06,4.417170495972456e-09,3.078037080991631e-14,0.1287988552634217,0.05991447522651532,0.07296388421129367,0.02116476301032125,0.007487076223531894,0.8209995119632241,0.01274408058664411,0.0005710600055939847,5.381202197439346e-06,0.0001478547158892723,0.007010669735042656,4.50563634682908e-07,1.169684939106655e-05,2.367395331744118e-10,3.220209236894082e-08,9.988930123068134e-11,1.377274868492967e-12,1.273511786404906e-16,0.1679247233843598,0.898677618897785,0.9430831616863381,0.1809730192405225,0.03131934648710695,0.06699799741540437,0.1313768176389716,7.03199817642044e-05,0.0006123736668428532,0.4175913534938778,0.1722913881117981,0.001839643996576633,4.70165887624004e-05,7.158763963021577e-08,2.222133548563293e-08,5.597589877589137e-09,1.073647570041037e-13,5.126846570298892e-13,0.8374677799123396,0.9659047306339117,0.3052893603051792,0.01905717362273065,0.03811402125363832,0.02217065408575802,0.05469685762470137,2.765892327757688e-06,1.802934175238417e-07,0.005031748806867278,0.01248905328625865,0.02223749010036224,5.57341688473695e-07,9.05202831343811e-06,1.262205944659851e-05,1.011315470991113e-10,2.89406703592574e-13,4.101420241443176e-13,0.3503779570638843,0.2448784216229399,0.1918542473488113,0.0275350363852772,0.005238436119114129,0.0007413661212294429,0.008359947288314473,0.01466493375292088,2.821467713160324e-06,0.01560402083766063,0.002812565748107328,0.02339099450139698,0.0001910187964321905,7.91932325567935e-06,6.414458775336935e-08,1.253405418011072e-10,4.495898751912549e-14,1.443479579893527e-15,0.4534849170000117,0.1830584695227681,0.4275498660033017,2.483495199038424e-05,0.0002289859544929954,0.002242110147299019,0.05368711436039748,0.0002733545181351433,2.08010817849735e-07,0.05372762831638239,0.6639438452128616,0.0003374605569775383,0.01390183938135589,1.20552162575747e-08,2.330670092374556e-09,3.076509259466301e-08,9.837382284348062e-08,2.595785795961309e-12,0.1303815192547028,0.1572312411492535,0.08108833975990629,0.003307304428978515,0.157492828228779,0.01110363731217062,0.002408273046996285,0.003395905124794412,0.000283577815094637,0.6524888013416197,0.0139005608530739,0.2272206569324344,0.01611349904844313,4.086322790010684e-06,2.125124158352122e-10,4.119816492996465e-05,3.869529711481476e-10,9.083425605763486e-19,0.2863569474790719,0.9680896780489502,0.910334009946546,0.016865273765727,0.001810889715715365,0.01213631696130021,0.002108327170555451,1.425126174993182e-06,3.859724066874853e-07,0.07290966846376812,0.0005756347628768266,0.0002781466937629869,3.723321765261707e-05,1.241849046598678e-09,1.080548316243846e-07,4.384460820330193e-05,1.111386608129004e-09,4.215275200784179e-22,0.154531636409934,0.06639202198511052,0.05471186766776873,0.03583851573572861,0.09117359113425776,0.0001617113671966894,0.09610590468870593,1.267224629841915e-06,5.980863898345767e-06,0.1216812986450145,0.03448046183082533,8.933961154829567e-05,0.0003197544401905122,1.235969907656263e-06,0.0005961430899458661,6.183286815741509e-06,5.543065106170862e-12,2.695308769372508e-17,0.4602584015066185,0.01379372731081873,0.2181324982201618,0.4821379036285276,0.02278070674163273,0.002292099772568022,0.006126601030575017,5.063631842522869e-06,2.029550542895744e-06,0.04454643136238535,0.08858128554840369,0.01599599447040621,0.008090346276112798,4.511992823724596e-07,5.302288823057603e-12,1.70473244107066e-09,1.451633889877772e-14,1.455295455460035e-20,0.06476253763377984,0.02385718428967476,0.1077287521414799,0.1779065360809426,0.001766396942135716,0.0468387474132557,0.005902116527369077,0.0001140949544585593,1.525572235118789eaired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\"],[\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>.sim_id<\\/th>\\n      <th>n<\\/th>\\n      <th>mean_diff<\\/th>\\n      <th>sd<\\/th>\\n      <th>rep<\\/th>\\n      <th>Source<\\/th>\\n      <th>estimate<\\/th>\\n      <th>statistic<\\/th>\\n      <th>p.value<\\/th>\\n      <th>parameter<\\/th>\\n      <th>conf.low<\\/th>\\n      <th>conf.high<\\/th>\\n      <th>method<\\/th>\\n      <th>alternative<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,7,8,9,10,11,12]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\".sim_id\",\"targets\":1},{\"name\":\"n\",\"targets\":2},{\"name\":\"mean_diff\",\"targets\":3},{\"name\":\"sd\",\"targets\":4},{\"name\":\"rep\",\"targets\":5},{\"name\":\"Source\",\"targets\":6},{\"name\":\"estimate\",\"targets\":7},{\"name\":\"statistic\",\"targets\":8},{\"name\":\"p.value\",\"targets\":9},{\"name\":\"parameter\",\"targets\":10},{\"name\":\"conf.low\",\"targets\":11},{\"name\":\"conf.high\",\"targets\":12},{\"name\":\"method\",\"targets\":13},{\"name\":\"alternative\",\"targets\":14}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\nsimpr_tbl |> \n  dplyr::group_by(n, mean_diff, sd) |> \n  dplyr::summarize(Power = mean(p.value < 0.05)) |> \n  dplyr::ungroup() |> \n  ggplot(aes(n, Power)) + \n  geom_col() + \n  facet_grid(rows = dplyr::vars(sd), cols = dplyr::vars(mean_diff)) + \n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'n', 'mean_diff'. You can override using\nthe `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](simulator_files/figure-html/simpr-2.png){width=672}\n:::\n:::\n\n\n### Philosophy\n\nThe [{**simpr**}](https://statisfactions.github.io/simpr/) workflow, inspired by\nthe [{**infer**}](https://infer.tidymodels.org) package, distills a simulation\nstudy into five primary steps:\n\n-   `specify()` your data-generating process;\n-   `define()` parameters that you want to systematically vary across your \nsimulation design (e.g. n, effect size);\n-   `generate()` the simulation data;\n-   `fit()` models to your data (e.g. `lm()`);\n-   `tidy_fits()` for consolidating results using `broom::tidy()`, such as \ncomputing power or Type I Error rates.\n\n### Reproducible workflows\n\n-   Same seed, same results;\n-   Can regenerate just a *specific subset* to see what happened in that particular dataset or fit;\n-   Useful in debugging and diagnosing unexpected results, etc.\n\n#### Filtering full simulation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwithr::with_seed(500, {\n  specify(a = ~ runif(6)) |> \n    generate(3) |> \n    dplyr::filter(.sim_id == 3)\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfull tibble\n--------------------------\n# A tibble: 1 × 3\n  .sim_id   rep sim             \n    <int> <int> <list>          \n1       3     3 <tibble [6 × 1]>\n\nsim[[1]]\n--------------------------\n# A tibble: 6 × 1\n      a\n  <dbl>\n1 0.371\n2 0.959\n3 0.633\n4 0.177\n5 0.803\n6 0.133\n```\n\n\n:::\n:::\n\n\n#### Simulate subset only\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwithr::with_seed(500, {\n  specify(a = ~ runif(6)) |> \n    generate(3, .sim_id == 3)\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfull tibble\n--------------------------\n# A tibble: 1 × 3\n  .sim_id   rep sim             \n    <int> <int> <list>          \n1       3     3 <tibble [6 × 1]>\n\nsim[[1]]\n--------------------------\n# A tibble: 6 × 1\n      a\n  <dbl>\n1 0.371\n2 0.959\n3 0.633\n4 0.177\n5 0.803\n6 0.133\n```\n\n\n:::\n:::\n\n\n#### Benchmarking\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbench::mark(\n  all = specify(a = ~ runif(6)) |> \n    generate(1000) |> \n    dplyr::filter(.sim_id == 1000),\n  subset = specify(a = ~ runif(6)) |> \n    generate(1000, .sim_id == 1000),\n  check = FALSE, min_iterations = 10L, relative = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Some expressions had a GC in every iteration; so filtering is\ndisabled.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  expression   min median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <dbl>  <dbl>     <dbl>     <dbl>    <dbl>\n1 all         67.1   64.6       1        1        1   \n2 subset       1      1        65.5      1.29     1.35\n```\n\n\n:::\n:::\n\n\n### Other features\n\n::: {.callout-tip}\n## Data munging\n\nAdd `per_sim() |>` after `generate()` in your simulation pipeline and then any tidyverse function that will apply to every simulation dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecify(\n  pre  = ~ rnorm(n, 0, sd), \n  post = ~ pre + rnorm(n, mean_diff, sd)\n) |> \n  define(n = ns, mean_diff = mean_diffs, sd = sds) |> \n  generate(reps, .progress = TRUE) |> \n  ## Apply tidyverse functions to every simulation dataset\n  per_sim() |> \n  ## Mutate to add a range restriction\n  dplyr::mutate(dplyr::across(dplyr::everything(), dplyr::case_when(\n    pre >  100 ~ 100,\n    pre < -100 ~ -100,\n    .default   ~ pre\n  ))) |> \n  fit(t = ~ t.test(post, pre, paired = TRUE)) |> \n  tidy_fits()\n```\n:::\n\n:::\n\n::: {.callout-tip}\n## Error handling\n\n-   Can change error handling to keep going with simulation, stop simulation, or \nto skip warnings;\n-   Debug and recovery options to enter into simulation during error.\n:::\n\n::: {.callout-tip}\n## Built-in parallelization\n\nJust add\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(future)\nplan(multisession, workers = 6) # or however many cores are reasonable to use\n```\n:::\n\n\nand your simulation pipeline (actually the `generate()` function) will run in\nparallel.\n:::\n\n### Pros & cons\n\n:::: {.columns}\n\n::: {.column}\n::: {.callout-note icon=\"false\"}\n## Pros\n\n-   tidyverse friendly;\n-   beginner friendly;\n-   Reproducibility, error handling built in;\n-   General-purpose, customizable and can handle arbitrary R code.\n:::\n:::\n\n::: {.column}\n::: {.callout-important icon=\"false\"}\n## Cons\n\n-   Likely not as fast/optimized as some alternatives;\n-   Not as customizable/powerful as **DeclareDesign**;\n-   Not specifically set up for any particular application (no MC errors, plots, \nreports, specific models…).\n:::\n:::\n\n::::\n\n## [{**simulator**}](https://jacobbien.github.io/simulator/)\n\nThis is a package on the CRAN. It is described in a 2016 paper by Jacob Bien.\nLast update on GitHub : last year (so, 2023).\n\n### Getting started\n\nThe function `create()`, with a directory that does not exist, will create the\ndirectory with 5 files and 1 folder:\n\n-   `eval_functions.R`: contains metrics to be evaluated;\n-   `files/`: directory to store results;\n-   `main.R`: main code to run;\n-   `method_functions.R`: methods to run;\n-   `model_functions.R`: define the models;\n-   `writeup.Rmd`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulator_dir <- \"./sims_simulator\"\nif (!file.exists(simulator_dir))\n  create(simulator_dir)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNew simulation template created!  Go to ./sims_simulator/main.R to get started.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwithr::with_dir(simulator_dir, {\n  list.files()\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"eval_functions.R\"   \"main.R\"             \"method_functions.R\"\n[4] \"model_functions.R\"  \"writeup.Rmd\"       \n```\n\n\n:::\n:::\n\n\n> On a typical project, one starts by defining a model in `model_functions.R`,\none or two methods in `method_functions.R`, and a few metrics in\n`eval_functions.R`, and then one runs the code in `main.R`. After looking at\nsome of the results, one might add an additional model or method or metric. One\nthen returns to `main.R`, adds some additional lines specifying that the\nadditional components should be run as well and looks at some more results.\n> \n> The simplest way to look at results is by using the plot functions\n`plot_eval()`, `plot_evals()` and `plot_evals_by()`. In situations where you\nwish to investigate results more deeply than just looking at aggregated plots,\none can use the functions `model()`, `draws()`, `output()`, and `evals()` to get\nat all objects generated through the course of the simulation.\n\nThe `create()` function also creates the template in the different files:\n\n#### Content of `model_functions.R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_my_model <- function(n, prob) {\n  new_model(\n    name = \"contaminated-normal\", \n    label = sprintf(\"Contaminated normal (n = %s, prob = %s)\", n, prob), \n    params = list(n = n, mu = 2, prob = prob), \n    simulate = function(n, mu, prob, nsim) {\n      # this function must return a list of length nsim\n      contam <- runif(n * nsim) < prob\n      x <- matrix(rep(NA, n * nsim), n, nsim)\n      x[contam] <- rexp(sum(contam))\n      x[!contam] <- rnorm(sum(!contam))\n      x <- mu + x # true mean is mu\n      return(split(x, col(x))) # make each col its own list element\n    }\n  )\n}\n```\n:::\n\n\nDefine a model from its different components with `new_model()`:\n\n-   `name`;\n-   `label`: what will be printed in the tables later probably?\n-   `param`: a list of different parameters for the model;\n-   `simulate`: a function of the parameters that returns `nsim` simulations.\n\n#### Content of `method_functions.R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_method <- new_method(\n  name = \"my-method\", \n  label = \"My Method\", \n  method = function(model, draw) {\n    list(fit = median(draw))\n  }\n)\n\ntheir_method <- new_method(\n  name = \"their-method\", \n  label = \"Their Method\",\n  method = function(model, draw) {\n    list(fit = mean(draw))\n  }\n)\n```\n:::\n\n\nDefine methods to be used on the model. The function `new_method()` has for\narguments a name (for R) `name`, a pretty name `label`, and the `method` named\narg for the computation we want.\n\n#### Content of `eval_functions.R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhis_loss <- new_metric(\n  name = \"hisloss\", \n  label = \"His loss function\",\n  metric = function(model, out) {\n    return((model$mu - out$fit)^2)\n  }\n)\n\nher_loss <- new_metric(\n  name = \"herloss\", \n  label = \"Her loss function\",\n  metric = function(model, out) {\n    return(abs(model$mu - out$fit))\n  }\n)\n```\n:::\n\n\nMetric objects: shows how to compare model object and output of the method\n(method used on sim) object.\n\n#### Content of `main.R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(simulator_dir)\n\nsource(\"model_functions.R\")\nsource(\"method_functions.R\")\nsource(\"eval_functions.R\")\n\n## @knitr init\n\nname_of_simulation <- \"normal-mean-estimation-with-contamination\"\n\n## @knitr main\n\nsim <- new_simulation(\n  name = name_of_simulation,\n  label = \"Mean estimation under contaminated normal\"\n) %>%\n  generate_model(\n    make_model = make_my_model, \n    seed = 123,\n    n = 50,\n    prob = as.list(seq(0, 1, length = 6)),\n    vary_along = \"prob\"\n  ) %>%\n  simulate_from_model(nsim = 10) %>%\n  run_method(list(my_method, their_method)) %>%\n  evaluate(list(his_loss, her_loss))\n\n## @knitr plots\n\nplot_eval_by(sim = sim, metric_name = \"hisloss\", varying = \"prob\")\n\n## @knitr tables\n\ntabulate_eval(\n  object = sim, \n  metric_name = \"herloss\", \n  output_type = \"markdown\",\n  format_args = list(digits = 1)\n)\n```\n:::\n\n\nThe `main.R` script calls the different files.\n\nCan `plot_eval_by()` be used for different metrics at once?\nCan `tabulate_eval()` be used for different metrics at once?\n\n### Example: power curve\n\nHere is the content of the `main.R` file in the folder `simulator_equality_test/`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(simulator) # this file was created under simulator version 0.2.5\n\nsource(\"simulator_equality_test/model_functions.R\")\nsource(\"simulator_equality_test/method_functions.R\")\nsource(\"simulator_equality_test/eval_functions.R\")\n\n## @knitr init\n\nname_of_simulation <- \"normal-mean-test\"\n\n## @knitr main\n\nsuppressMessages(\n  \n  sim <- new_simulation(\n    name = name_of_simulation, \n    label = \"Test of mean\"\n  ) |> \n    generate_model(\n      make_model = make_my_model_normal, \n      seed = 13, \n      n = 20, \n      mu2 = as.list(seq(0, 10, by = 0.5)), \n      mu1 = 0, \n      sig = 5, \n      vary_along = \"mu2\"\n    ) |> \n    simulate_from_model(nsim = 1000) |> \n    run_method(list(t_test)) |> \n    evaluate(list(pval_loss))\n\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n..Created model and saved in normal/mu1_0/mu2_0/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_0.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_1/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_1.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_2/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_2.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_3/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_3.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_4/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_4.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_5.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_6/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_6.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_7/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_7.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_8/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_8.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_9/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_9.5/n_20/sig_5/model.Rdata\n..Created model and saved in normal/mu1_0/mu2_10/n_20/sig_5/model.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_0/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_0.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_1/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0.01 sec and saved in normal/mu1_0/mu2_1.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_2/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0.01 sec and saved in normal/mu1_0/mu2_2.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0.01 sec and saved in normal/mu1_0/mu2_3/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_3.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_4/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_4.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_5.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0.01 sec and saved in normal/mu1_0/mu2_6/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_6.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_7/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0.01 sec and saved in normal/mu1_0/mu2_7.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_8/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_8.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_9/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_9.5/n_20/sig_5/r1.Rdata\n..Simulated 1000 draws in 0 sec and saved in normal/mu1_0/mu2_10/n_20/sig_5/r1.Rdata\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Performed Mean equality test in 0 seconds (on average over 1000 sims)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n..Evaluated Mean equality test in terms of pval<0.05, Computing time (sec)\n```\n\n\n:::\n\n```{.r .cell-code}\n## @knitr tables\n\ntabulate_eval(\n  sim, \n  metric_name = \"p_value\", \n  output_type = \"markdown\",\n  format_args = list(digits = 5)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<!-- generated by simulator on Sat Aug 24 10:53:15 2024. -->\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n\nTable: A comparison of Mean pval<0.05 (averaged over 1000 replicates).\n\n|       |Mean equality test |\n|:------|:------------------|\n|normal |0.055 (0.0072130)  |\n|normal |0.067 (0.0079103)  |\n|normal |0.100 (0.0094916)  |\n|normal |0.143 (0.0110758)  |\n|normal |0.226 (0.0132325)  |\n|normal |0.327 (0.0148422)  |\n|normal |0.441 (0.0157088)  |\n|normal |0.559 (0.0157088)  |\n|normal |0.671 (0.0148654)  |\n|normal |0.783 (0.0130415)  |\n|normal |0.860 (0.0109782)  |\n|normal |0.907 (0.0091889)  |\n|normal |0.955 (0.0065588)  |\n|normal |0.982 (0.0042064)  |\n|normal |0.992 (0.0028185)  |\n|normal |0.995 (0.0022316)  |\n|normal |0.999 (0.0010000)  |\n|normal |0.999 (0.0010000)  |\n|normal |0.999 (0.0010000)  |\n|normal |1.000 (0.0000000)  |\n|normal |1.000 (0.0000000)  |\n\n\n:::\n\n```{.r .cell-code}\n## @knitr plots\n\nplot_eval_by(\n  sim, \n  metric_name = \"p_value\", \n  varying = \"mu2\", \n  main = \"Power curve with mu1=0 and varying mu2\"\n)\n```\n\n::: {.cell-output-display}\n![](simulator_files/figure-html/simulator-power-1.png){width=672}\n:::\n:::\n\n\nToDo :\n\n-   vary `n`\n-   vary both `n` and `mu2`\n\n### Important functions\n\n-   `new_model()`;\n-   `new_method()`;\n-   `new_metric()`;\n-   `new_simulation()`;\n-   `generate_model()`;\n-   `simulate_from_model()`;\n-   `run_method()`;\n-   `evaluate()`;\n-   `plot_eval()`, `plot_eval_by()`, `tabulate_eval()`.\n\n## Pros & cons\n\nThis is not really a package that codes a method, but instead it proposes an\narchitecture to store your codes, output simulations, results, etc.\n\n:::: {.columns}\n\n::: {.column}\n::: {.callout-note icon=\"false\"}\n## Pros\n\n-   any model possible, if you can write it;\n-   possible to iterate over parameter with pretty pipes;\n-   parallel possible, because you choose what you use;\n-   stores all results in the storage with increasing depth:\n\n``` txt\nfiles\n└── name_of_model\n    └── name_of_first_param_value\n        └── name_of2nd_param_value ... model.Rdata out stores all sims\n            └── r?.Rdata\n```\n:::\n:::\n\n::: {.column}\n::: {.callout-important icon=\"false\"}\n## Cons\n\n-   Not an usual way to code in R, and not easy to explain. Create the directory \nwith the `create()` function. Then, add the different functions, methods, \nmodels, etc., in the corresponding files;\n-   Mixes the code of the package/template with your own code;\n-   Stores all results in this neat way BUT if too many parameters, may exceed \nthe depth allowed.\n:::\n:::\n\n::::\n\n\n\n\n\n## [{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html)\n\n[{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html)\nis an open-source R package for structuring, maintaining, running, and debugging\nstatistical simulations on both local and cluster-based computing environments.\nThe paper describing the package is available\n[here](https://arxiv.org/pdf/2403.05698).\n\n### Example\n\n1. Create a simulation object `SimEngine::new_sim()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- new_sim()\n```\n:::\n\n\n2. Create functions to generate data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_data <- function(n) {\n  return(rpois(n = n, lambda = 20))\n}\n\nest_lambda <- function(dat, type) {\n  if (type==\"M\") {\n    return(mean(dat))\n  }\n  if (type==\"V\") {\n    return(var(dat))\n  }\n}\n```\n:::\n\n\n3. Simulation set-up\n\nOne run = one simulation replicate. Features varying across simulation =\nsimulation levels. Possible values = level values. By default,\n[{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html)\nruns one simulation replicate for each combination of level value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- sim |> \n  set_levels(\n    estimator = c(\"M\", \"V\"),\n    n = c(10, 100, 1000)\n  )\nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimEngine: simulation object (class \"sim_obj\")\n----------------------------------------------\nConfiguration: \n    num_sim: 1\n    parallel: FALSE\n    n_cores: NA\n    packages: NULL\n    stop_at_error: FALSE\n    seed: 528361534\n    progress_bar: TRUE\n    batch_levels: NA\n    return_batch_id: FALSE\nLevels: \n    estimator: c(\"M\", \"V\")\n    n: c(10, 100, 1000)\nState: pre run\n```\n\n\n:::\n:::\n\n\n4. Create a simulation script\n\ni.e. generation, analysis and return results\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- sim |> \n  set_script(function() {\n    dat <- create_data(n = L$n)\n    lambda_hat <- est_lambda(dat = dat, type = L$estimator)\n    return(list(\"lambda_hat\" = lambda_hat))\n  })\n```\n:::\n\n\n5. Configure and run the simulation\n\nUsing the `SimEngine::set_config()` it is possible to specify the number of\nreplicates `num_sim`, the parallelization type `n_cores`, `parallel`, ... and\nthe required packages `packages` argument.\n\nAnd we run the simulation with the `SimEngine::run()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Configuration\nsim <- sim |> \n  set_config(\n    num_sim = 100,\n    packages = c(\"ggplot2\", \"stringr\")\n  )\n\n### Run\nsim <- run(sim)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDone. No errors or warnings detected.\n```\n\n\n:::\n:::\n\n\nThe package implements a `SimEngine::summarize()` function to calculate usual\nsummary statistics such as bias, variance, MSE.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim |> \n  summarize(\n    list(\n      stat = \"bias\",\n      name = \"bias_lambda\",\n      estimate = \"lambda_hat\",\n      truth = 20\n    ), \n    list(\n      stat = \"mse\",\n      name = \"mse_lambda\",\n      estimate = \"lambda_hat\",\n      truth = 20\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  level_id estimator    n n_reps bias_lambda  mse_lambda\n1        1         M   10    100  -0.0930000  1.75850000\n2        2         V   10    100   0.3353333 96.23611111\n3        3         M  100    100  -0.0877000  0.20287100\n4        4         V  100    100  -0.3656687  9.04930168\n5        5         M 1000    100   0.0198000  0.02163858\n6        6         V 1000    100   0.1130303  0.75417061\n```\n\n\n:::\n:::\n\n\nWe can have information on individual simulation including runtime.\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sim$results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sim_uid level_id rep_id estimator  n      runtime lambda_hat\n1       1        1      1         M 10 0.0006411076       20.3\n2       7        1      2         M 10 0.0004019737       20.4\n3       8        1      3         M 10 0.0003955364       19.8\n4       9        1      4         M 10 0.0003943443       19.1\n5      10        1      5         M 10 0.0003862381       19.8\n6      11        1      6         M 10 0.0004229546       20.9\n```\n\n\n:::\n:::\n\n\nIt is possible to update simulation with more replicates or a new level. It\nkeeps the old simulations and run only needed ones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- sim |> \n  set_config(num_sim = 200) |> \n  set_levels(\n    estimator = c(\"M\", \"V\"),\n    n = c(10, 100, 1000, 10000)\n  ) |> \n  update_sim()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDone. No errors or warnings detected.\n```\n\n\n:::\n:::\n\n\n### Parallelization\n\n[A specific\nvignette](https://avi-kenny.github.io/SimEngine/articles/parallelization.html)\nis available and the introduction precises the terminology for parallel\ncomputing (node, core, task, job, etc.). There are two modes of parallelizing\ncode: `local` or `cluster`. The first thing is to specify `set_config(parallel =\nTRUE)`.\n\n-   **Local**: split calculations on several cores of a single computer.\nIf the user’s computer has $n$ cores available, [{**simEngine**}](https://cran.r-project.org/web/packages/SimEngine/vignettes/SimEngine.html) will use $n-1$ cores by default.\n-   **Cluster**: function `run_on_cluster()`. To use the function, the user \nneeds to break the code into three blocks : `first` (code run only once, set-up\nsimulation object), `main` (a single call to `run()`) and `last` (the code will\nrun after all simulation replicates have finished running and after SimEngine\nhas automatically compiled the results into the simulation object.).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_on_cluster(\n  first = {\n    create_data <- function(n) {\n      return(rpois(n = n, lambda = 20))\n    }\n    est_lambda <- function(dat, type) {\n      if (type == \"M\") {\n        return(mean(dat))\n      }\n      if (type == \"V\") {\n        return(var(dat))\n      }\n    }\n    sim <- new_sim() |> \n      set_levels(estimator = c(\"M\", \"V\"), n = c(10, 100, 1000)) |> \n      set_script(function() {\n        dat <- create_data(L$n)\n        lambda_hat <- est_lambda(dat = dat, type = L$estimator)\n        return(list(\"lambda_hat\" = lambda_hat))\n      }) |> \n      set_config(num_sim = 100, n_cores = 20)\n  },\n  main = {\n    sim <- run(sim)\n  },\n  last = {\n    sim <- summarize(sim)\n  },\n  cluster_config = list(js = \"slurm\")\n)        \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDone. No errors or warnings detected.\n```\n\n\n:::\n:::\n\n\nThe `cluster_config` argument enables to specify options such as the choice of\nthe scheduler.\n\nExample on how to give instruction to the job scheduler is on the vignette.\n\nBe caution: the number of cores cannot exceed the total number of simulation\nreplicates.\n\nFunction to update simulation on a CSS: `update_sim_on_cluster()`. Difference is\nwe do not need to create a new simulation config but load the existing\nsimulation using `readRDS()` and use `set_config()` or `set_levels()` and\n`update_sim()` in the main block.\n\nThere is a vignette on advanced functionality such as complex results or\nsimulation levels. It exists the `batch()` function to share data or objects\nbetween simulation replicates.\n\n## Pros & cons\n\n:::: {.columns}\n\n::: {.column}\n::: {.callout-note icon=\"false\"}\n## Pros\n\n-   beginner friendly;\n-   local and cluster-based computing environments;\n-   well-written documentations and website with vignettes (with stat. formula \nof terminology for parallel computing);\n-   information-sharing across simulation replicates (not tested);\n-   automatic calculation of Monte Carlo error (not tested).\n:::\n:::\n\n::: {.column}\n::: {.callout-important icon=\"false\"}\n## Cons\n\n:::\n:::\n\n::::\n\n### Simulation-based power calculation\n\nA [specific vignette] is available on [the author's\nwebsite](https://avi-kenny.github.io/SimEngine/articles/example_1.html).\n\n## [{**simChef**}](https://yu-group.github.io/simChef/index.html)\n\nThis document describes a simulation experiment using the\n[{**simChef**}](https://yu-group.github.io/simChef/index.html) package in R,\nincluding data generation, method application, evaluation, and visualization.\n\nA [specific vignette](https://yu-group.github.io/simChef/articles/simChef.html)\nis available on the author's website for more detailed instructions and examples\non using the [{**simChef**}](https://yu-group.github.io/simChef/index.html)\npackage.\n\n### Setup\n\nThe [{**simChef**}](https://yu-group.github.io/simChef/index.html) package is\nnot on CRAN and must therefore be installed from GitHub using the\n[{**remotes**}](https://remotes.r-lib.org) package as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"Yu-Group/simChef\")\n```\n:::\n\n\nIn [{**simChef**}](https://yu-group.github.io/simChef/index.html), a simulation\nexperiment is divided into four components:\n\n-   `DGP()`: the data-generating processes (DGPs) from which to generate data;\n-   `Method()`: the methods (or models) to fit on the data in the experiment;\n-   `Evaluator()`: the evaluation metrics used to evaluate the methods' \nperformance;\n-   `Visualizer()`: the visualization procedures used to visualize outputs from \nthe method fits or evaluation results (can be tables, plots, or even R Markdown \nsnippets to display).\n\n### Step 1: Define the Data-Generating Process, Methods, and Evaluation Functions\n\n#### Data-Generating Process\n\nThe following function generates pre- and post-treatment data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndgp_fun <- function(n, sd, mean_diff) {\n  pre  <- rnorm(n, 0, sd)\n  post <- pre + rnorm(n, mean_diff, sd)\n  list(pre = pre, post = post)\n}\n```\n:::\n\n\n#### Method\n\nThe following function applies a paired t-test to the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmethod_fun <- function(pre, post) {\n  t.test(post, pre, paired = TRUE)\n}\n```\n:::\n\n\n#### Evaluation\n\nThe following function evaluates the power of the test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nevaluation_fun <- function(fit_results) {\n  Power <- fit_results |> \n    dplyr::group_by(n, mean_diff, sd) |> \n    dplyr::summarize(Power = mean(p.value < 0.05))\n}\n```\n:::\n\n\n#### Visualization\n\nThe following function creates a plot to visualize the power:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npower_plot_fun <- function(fit_results, eval_results) {\n  fit_results |> \n    dplyr::group_by(n, mean_diff, sd) |> \n    dplyr::summarize(Power = mean(p.value < 0.05)) |> \n    ggplot(aes(n, Power)) + \n    geom_col() + \n    facet_grid(rows = dplyr::vars(sd), cols = dplyr::vars(mean_diff)) + \n    theme_bw()\n}\n```\n:::\n\n\n### Step 2: Convert Functions into [{**simChef**}](https://yu-group.github.io/simChef/index.html) Class Objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndgp <- create_dgp(\n  .dgp_fun = dgp_fun, .name = \"DGP\"\n)\n\nmethod <- create_method(\n  .method_fun = method_fun, .name = \"T-test\"\n)\n\nevaluation <- create_evaluator(\n  .eval_fun = evaluation_fun , .name = 'P.value'\n)\n\npower_plot <- create_visualizer(\n  .viz_fun = power_plot_fun, .name = 'Power plot'\n)\n```\n:::\n\n\n### Step 3: Assemble the Simulation Experiment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexperiment <- create_experiment(name = \"Example Experiment\") |> \n  add_dgp(dgp) |> \n  add_method(method) |> \n  add_evaluator(evaluation) |> \n  add_visualizer(power_plot)\n\n## Define the grid of simulation parameters\nexperiment <- experiment |> \n  add_vary_across(.dgp = \"DGP\", n = ns, mean_diff = mean_diffs, sd = sds)\n\nprint(experiment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nExperiment Name: Example Experiment \n   Saved results at: results/Example Experiment \n   DGPs: DGP \n   Methods: T-test \n   Evaluators: P.value \n   Visualizers: Power plot \n   Vary Across: \n      DGP: DGP \n         n:  int [1:3] 100 150 200\n         mean_diff:  num [1:3] 10 20 30\n         sd:  num [1:2] 50 100\n```\n\n\n:::\n:::\n\n\n### Step 4: Run the Experiment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults <- run_experiment(experiment, n_reps = reps, save = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFitting Example Experiment...\nSaving fit results...\nFit results saved | time taken: 0.014805 seconds\n10 reps completed (totals: 10/10) | time taken: 0.679411 minutes\n==============================\nEvaluating Example Experiment...\n`summarise()` has grouped output by 'n', 'mean_diff'. You can override using the `.groups` argument.\nEvaluation completed | time taken: 0.000166 minutes\nSaving eval results...\nEval results saved | time taken: 0.051729 seconds\n==============================\nVisualizing Example Experiment...\n`summarise()` has grouped output by 'n', 'mean_diff'. You can override using the `.groups` argument.\nVisualization completed | time taken: 0.000272 minutes\nSaving viz results...\nViz results saved | time taken: 0.068634 seconds\n==============================\n```\n\n\n:::\n\n```{.r .cell-code}\nDT::datatable(results$fit_results)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-96264f72dfbfc884aad6\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-96264f72dfbfc884aad6\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\"],[\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"2\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"5\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"6\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"7\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"8\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"9\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\",\"10\"],[\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\",\"DGP\"],[\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-test\",\"T-teste-09,0.003251374496485936,0.0001141154764048167,0.1043616243287332,1.088687684592364e-08,0.412466893450697,1.241605107715219e-10,4.952644877765622e-05,0.01255477098610972,0.1111847614622828,7.304450115283728e-10,0.00605891758597241,3.626658714352052e-13,1.362860606492778e-08,0.0001155934116848273,0.6860779350732752,0.0007154977737356766,0.06115692419959504,8.057182621760278e-07,0.005142689483352559,0.0009115768771010293,0.7400960353254256,3.457395054739763e-06,0.08421067756802986,1.739094535528068e-13,7.627728648738318e-05,0.01172540923015401,0.9747304029592884,3.229130341295079e-07,0.009341173135672636,7.926876090081104e-12,0.0009578353302267476,0.03004687315566922,0.1995250609563342,0.0001051891779183376,0.001737268240493169,5.214384907007192e-07,0.001235794177657537,0.0004730969291752476,0.2125589249311121,2.962662743051271e-07,0.0239282185477977,1.323937631872051e-11,0.02061175684525339,0.02642877738182964,0.4877549725083089,1.543509194853229e-09,0.01911612960130758,2.043510692769885e-18,6.789859092711976e-07,0.05325192464178121,0.03737181340666142,0.0001287825382008887,0.0001150412304981014,1.6333758294129e-10,0.05591926181673262,0.128058890791509,0.2632264671142657,1.708019162609766e-10,4.244557857738722e-05,8.917795435162223e-15,1.902070171521207e-07,0.008980153141214453,0.2426064947455166,1.660406770614536e-07,0.02257633644153463,5.097383532104826e-20,0.00257279409117535,0.2121839153365726,0.124535310502988,0.000661952897302537,0.3543397674985094,1.980309922721872e-06,0.06286056225083596,0.2905326854105297,0.05785953114422484,0.0001452939842295467,0.1360464495045452,2.042709741657292e-11,5.592105899823105e-05,0.08082243678533044,0.001905756489670829,0.0009237786269152029,0.03958480516870051,6.693482863205691e-19,1.671989013269932e-06,0.3290128824995892,0.1218125420829321,0.005428007202939905,0.001829949276902479,5.819374549865843e-06,0.1038943271544669,0.08339205762167184,0.8983343721069305,7.368426850456634e-06,0.01094524930970989,1.514398899129539e-12,0.006521712088683757,0.08334363846052668,0.1849949096540376,9.85728801537842e-05,0.01379327126456735,1.20382981759584e-10,5.178469012034217e-05,0.1003448313124398,0.8056853344189893,0.007521636907017382,0.0001096894278221173,9.759541702669269e-06,0.2663527727085486,0.09920936798356528,0.3562881269894755,1.613220362127058e-06,0.0002967244201917238,2.425328182977483e-10,0.0006323961317074675,0.01065973974904146,0.2494518141011025,9.0979445262085e-06,0.0006058081100108881,1.705046063155196e-13,5.323537003944404e-07,0.0234392253938357,0.5903761282235109,6.466423886674922e-08,0.01414261457325099,3.599735978240857e-06,0.02260030721519483,0.1618362987963551,0.2683322352010548,4.895370054825695e-05,0.03860016043587197,3.153179119368272e-12,0.0003211884528738719,0.5352176639559652,0.01072105638668801,4.778488917650342e-05,5.661435198750429e-05,2.471869843605393e-20,2.847123353365489e-06,0.910178763089186,0.1120484721698132,0.003945442477876491,0.007766703105521697,2.006084166630643e-08,0.0001712330436302411,0.3736732928077241,0.5507384585810808,4.191339015904529e-06,0.007615802614291145,2.23385987650326e-14,3.417525376172359e-06,0.06495799495776652,0.4270193094621068,2.688474048542118e-10,0.02914339937521427,2.529650287737393e-14,0.0006494144279047264,2.335428833193902e-06,0.8187290808483728,2.483176220819443e-05,0.164457258602204,2.459431852229219e-10,5.671979892559566e-05,0.1027024741235592,0.07704624570374623,2.208031264432561e-10,0.007858547636434083,2.699693745996573e-11,0.0004529513583872008,0.0002135286327016451,0.01602027496740754,2.891869464760198e-06,0.9168951182871263,2.038486221495418e-14,3.057311081066343e-08],[[5.005779741484513,25.91311259684369],[2.738704314443376,42.53696815417216],[9.237319785323947,29.16105910520281],[-5.074691940328508,35.72014925550973],[21.6628435817776,40.64898203243979],[9.705703769775278,47.02288415276102],[8.556764469889471,25.56913663378285],[-2.977913100564654,31.43644822549631],[17.95010411861665,35.33894766081649],[-9.224571567973033,22.36214498151483],[21.64757872377076,38.9481595401087],[17.19331191328641,48.02423930341787],[1.936116031174674,15.89389124273305],[-2.769989403187101,26.60071015581635],[16.41066077698547,30.78783741317719],[5.585825566361466,33.04316985181993],[20.29192923412519,34.04743974956443],[24.7538622938544,49.45766364784719],[9.470612962160565,27.97396604312476],[-26.12796441185223,17.26320102353828],[7.776836789863961,28.2312601795629],[-0.9916390644731709,42.58239369966491],[15.75923609028859,34.80360346563633],[9.347309241505998,51.62313311667234],[6.017492116569795,22.90188264886894],[-13.56059776131985,19.04442101232627],[11.42560653482225,27.28532095743566],[-2.20742840015832,34.50291411551612],[22.91260276018516,37.67967105342387],[17.11405939914703,49.42768858704707],[2.249132937721781,17.76146529219801],[-13.52401541456224,13.96615263175627],[11.59180472719392,25.37501398680513],[4.4659477687162,31.44240784112526],[19.30077438003105,33.66218187086555],[9.58405668024794,36.95947530034908],[1.026618864482191,19.80467391006662],[-6.372169852322561,30.13459922764751],[10.75034667140604,31.4901909981966],[11.96053423788369,50.38545111488993],[16.61311807852817,36.08534092407829],[12.58087150255783,49.78198600193406],[6.493946360145302,22.54782087470813],[-5.498598285371678,24.51239109398388],[14.92184798859252,32.29729343424275],[2.414078822646622,33.63214225983391],[22.57559557390265,39.22582242964313],[2.873154097826414,34.07069458274915],[0.88841038911381,14.13301758170327],[-8.343929147680203,17.43009429866914],[13.95881756617715,26.57386964278468],[2.824675526811865,31.34855576494182],[24.50209322241034,37.03273672551127],[20.31190909723604,45.66164298019753],[-0.1358177290529278,19.14564076138002],[1.182675022205033,38.47017355363936],[9.930584060654638,29.6207639559408],[22.35119557637951,65.99194627373763],[24.87071261495309,44.0377016615891],[-0.5122712852192948,40.29240014802144],[-1.748343296842559,13.75432571274866],[-7.204605152113686,26.17606326042744],[19.51766378992834,35.30708362089948],[18.26375784297164,50.44340347141385],[25.38670894263747,40.48092082393597],[27.05943432167473,57.711140168225],[2.105823080053606,14.56144361985236],[-5.655932129392014,22.22799719988197],[12.46729323726117,26.70104453555301],[2.330986265219519,30.49030320534798],[30.04865760817577,44.39278358508805],[7.903132550275254,36.72768005942136],[-3.297269427532903,14.66362595752285],[-4.543368501726817,36.89917887072532],[7.934380151293627,28.48575379793018],[-10.6170394920535,29.3707512610183],[14.44289536591357,33.1116784266267],[-1.098028765788179,41.26779176031456],[-3.865361654408319,12.82441820721797],[-0.527698057457383,31.80114011618953],[7.564710672023234,23.10600558971901],[-3.578536383324528,26.05575239486098],[22.42031730032656,39.20428344623367],[17.76969793918076,50.08804973796016],[-0.7504093506540727,12.88191602043091],[8.237940719244561,35.8985183032589],[5.212737505302916,19.98891719719166],[0.6789590626569508,27.53092894665278],[25.69966913988581,38.56361178490583],[22.45228376835901,52.31290644512384],[-4.763706091781978,14.07902274287283],[-4.087730159404432,34.20478569087486],[4.769212363734521,26.80637954798564],[12.63155358680151,53.76192198700812],[14.46479089636397,34.91120425421698],[-3.725188669330432,39.39337010170592],[-0.9653865816155462,15.40988057687648],[-15.25758949123073,13.4013851115088],[11.90790911334313,29.53050750856325],[5.243918500957361,39.74278154286866],[22.18513079338529,37.43472411562374],[6.383710783361331,38.59731625301534],[-0.7608543850135788,12.19528000289266],[-4.343100146542588,22.34487120948151],[7.556721467771041,22.43856752331303],[3.58588483428428,31.1708112978121],[18.76266721163944,34.09413573163529],[16.03227601576497,45.22992060132587],[-1.800464640369619,20.1481504508628],[-23.5297339816426,18.32661716477277],[3.679859711729631,23.29089484574083],[22.01150263984932,64.71462093205049],[14.9458366435096,37.08823454570763],[-7.845537274599271,28.08971082779557],[-1.288443597588043,14.77635501441857],[-7.972963545868777,22.01657240768077],[12.22023521900487,28.20733766722211],[13.6564867390619,44.86219699686667],[19.86896414237352,36.16296122009123],[12.60705959719983,45.48461184156329],[2.177106213379588,16.34481787392588],[-5.62609741890834,21.53619080902583],[8.45918746173394,21.37204442761388],[9.872554494676926,35.61045630279881],[21.15738939450596,35.20035884931171],[22.6402115056407,50.44113841498278],[1.557130672264693,21.01217065123819],[-13.69504332444114,23.93760752475692],[17.78287804685719,36.05458544761814],[4.987124587107448,43.51798095765579],[16.2083530976897,38.19535803882003],[3.771201525664866,48.82938585019343],[-2.211953577977634,13.12126332918052],[-7.11873318433235,25.40720965670862],[8.811411325393362,24.59080731911506],[0.9343750608245234,34.23507382677654],[24.56522052361467,41.845495935437],[15.29668885592461,50.70047924505593],[-4.761808978699103,9.14102264867269],[3.906686931106479,29.41609679762906],[8.332584643830813,23.36878393797744],[13.85515644192411,39.35018238455415],[27.77935265316323,40.87098161599425],[20.75481956047537,49.49778359274138],[-9.096760265238554,10.19649096586132],[-4.200400539783367,39.56282675342125],[5.481698167740189,27.96547081476936],[7.102036235382633,45.53932631351037],[19.31406303948157,37.90859565152861],[18.83309009764237,57.71063550522868],[-4.283001294788607,11.33595164097639],[-22.05166248216564,11.80530351340834],[11.50329755578044,27.72455302512115],[6.297058549546692,40.4126535951812],[25.88688242246829,41.65338397121392],[21.08276900495723,50.31998487760455],[-0.4362659428961303,14.37887299025465],[-7.957682557802899,18.72920887591032],[17.49977226169175,32.2377386659288],[1.588913485162078,29.38096895389294],[22.91283116400971,37.36849781875791],[10.49740811666756,38.22702294350515],[14.52189664199216,33.53878425309389],[-22.29316296086865,17.66558439668534],[11.51712798732244,30.24351448341839],[-6.66981679624639,38.6838735823478],[27.90839204888585,49.77924933068831],[21.54439488918365,59.99191779400414],[-1.249354762368711,13.53219227128054],[-1.590413028428989,30.54330244259899],[19.53813108293882,35.502125398442],[6.574279682357641,42.73506083526236],[19.99575872118611,35.11119716492932],[14.04769322821434,48.50906960950058],[6.431483921551907,20.52287789154737],[3.196177943440158,30.76462956261671],[10.46540883811197,24.97647259210895],[-13.50379138609391,15.01476083281615],[20.86295791158018,33.95281942999162],[27.14173054404489,55.35383134575808]],[15.4594461691641,22.63783623430777,19.19918944526338,15.32272865759061,31.1559128071087,28.36429396126815,17.06295055183616,14.22926756246583,26.64452588971657,6.568786706770897,30.29786913193973,32.60877560835214,8.915003636953863,11.91536037631462,23.59924909508133,19.3144977090907,27.16968449184481,37.1057629708508,18.72228950264266,-4.432381694156975,18.00404848471343,20.79537731759587,25.28141977796246,30.48522117908917,14.45968738271937,2.741911625503211,19.35546374612895,16.1477428576789,30.29613690680451,33.27087399309706,10.00529911495989,0.2210686085970143,18.48340935699953,17.95417780492073,26.4814781254483,23.27176599029851,10.41564638727441,11.88121468766247,21.12026883480132,31.17299267638682,26.34922950130323,31.18142875224594,14.52088361742672,9.506896404306099,23.60957071141764,18.02311054124026,30.9007090017729,18.47192434028778,7.510713985408542,4.543082575494465,20.26634360448091,17.08661564587684,30.7674149739608,32.98677603871678,9.504911516163546,19.8264242879222,19.77567400829772,44.17157092505857,34.45420713827109,19.89006443140107,6.00299120795305,9.485729054156877,27.41237370541391,34.35358065719274,32.93381488328672,42.38528724494986,8.333633349952986,8.286032535244978,19.58416888640709,16.41064473528375,37.22072059663191,22.31540630484831,5.683178264994975,16.17790518449925,18.2100669746119,9.376855884482401,23.77728689627013,20.08488149726319,4.479528276404825,15.63672102936608,15.33535813087112,11.23860800576822,30.81230037328012,33.92887383857046,6.065753334888418,22.06822951125173,12.60082735124729,14.10494400465486,32.13164046239582,37.38259510674143,4.657658325545428,15.05852776573521,15.78779595586008,33.19673778690481,24.68799757529047,17.83409071618775,7.222246997630467,-0.9281021898609653,20.71920831095319,22.49335002191301,29.80992745450452,22.49051351818834,5.717212808939538,9.000885531469459,14.99764449554204,17.37834806604819,26.42840147163736,30.63109830854542,9.173842905246589,-2.601558408434918,13.48537727873523,43.36306178594991,26.01703559460861,10.12208677659815,6.743955708415261,7.021804430905996,20.21378644311348,29.25934186796428,28.01596268123237,29.04583571938156,9.260962043652736,7.955046695058744,14.91561594467391,22.74150539873787,28.17887412190883,36.54067496031174,11.28465066175144,5.121282100157886,26.91873174723766,24.25255277238162,27.20185556825486,26.30029368792915,5.454654875601443,9.144238236188137,16.70110932225421,17.58472444380053,33.20535822952584,32.99858405049027,2.189606834986793,16.66139186436776,15.85068429090413,26.60266941323913,34.32516713457874,35.12630157660837,0.5498653503113829,17.68121310681894,16.72358449125477,26.3206812744465,28.6113293455051,38.27186280143552,3.526475173093892,-5.123179484378647,19.61392529045079,23.35485607236395,33.7701331968411,35.70137694128089,6.971303523679262,5.385763159053711,24.86875546381027,15.48494121952751,30.14066449138381,24.36221553008636,24.03034044754303,-2.313789282091658,20.88032123537041,16.00702839305071,38.84382068978708,40.76815634159389,6.141418754455914,14.476444707085,27.52012824069041,24.65467025881,27.55347794305772,31.27838141885746,13.47718090654964,16.98040375302844,17.72094071511046,0.7554847233611183,27.4078886707859,41.24778094490149],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[5.268408990922939,10.0287077499034,5.020554658589494,10.27983385668136,4.784289952639107,9.40350306783489,4.304721333839534,8.708029307351643,4.399981674852725,7.992536918814072,4.377648138098403,7.80129599798169,3.5390676463549,7.447096043931333,3.645409093344668,6.961954705720203,3.487782364052728,6.26377934797912,4.662633555814153,10.93407789926865,5.15428098055136,10.98015837665832,4.798962976332153,10.65302457006177,4.272337533711263,8.25020276731542,4.013058870680275,9.288992333189981,3.73658143072401,8.176471076394503,3.933233822949758,6.970277343700161,3.494805526975031,6.840023972902793,3.641410743228078,6.941182020440666,4.731855312134853,9.199288679290399,5.226203795459133,9.682640007254456,4.906777666117035,9.374255791342089,4.062188120966064,7.593823188581004,4.396591490844619,7.899254870783479,4.213085986403136,7.894061850692249,3.358240127349017,6.535139813674025,3.198613101637652,7.232380531223416,3.177210861879213,6.427558953278131,4.858707228314191,9.396023580390819,4.961700352258232,10.99697053350607,4.829862236413126,10.28231096418581,3.922713973932234,8.446469079618579,3.995271896272422,8.142568579951003,3.819360126674401,7.755946719544494,3.158188393173992,7.070117597305976,3.609042841178014,7.139943580960949,3.637028924071724,7.308616306269422,4.525940414604285,10.4430484124526,5.178711337539314,10.07646636651825,4.704320020496524,10.6757026977898,4.223094271350928,8.180319478297536,3.932487670924917,7.498504846217879,4.246926674227657,8.177666061056719,3.456548119892189,7.013485582287513,3.746578426122338,6.808458827926318,3.261720620192767,7.571318638792642,4.748152368013415,9.649276461342529,5.553114332238721,10.3643828784252,5.152262544049363,10.86538413467396,4.143511628207307,7.25171646786644,4.459129775599108,8.729411177878729,3.858677030704779,8.151161599874968,3.285096323667307,6.766876134725043,3.773370690881229,6.994303841009531,3.887374842180736,7.403217041134084,5.530800216600332,10.54732223534086,4.941756776730442,10.76069788085906,5.579631270787901,9.055271923179561,4.064952297229441,7.588394726350025,4.045292467865289,7.896129087129303,4.122947473653096,8.319163205888016,3.592298142128217,6.887141683500118,3.27412310467005,6.525980981464271,3.56066909682695,7.049071895215366,4.902447780072346,9.482998020733085,4.60426149120246,9.709335549155103,5.540474020129532,11.35414761185861,3.87983670359155,8.230193808494199,3.992735517122067,8.42623398010304,4.372510165147393,8.958389242761443,3.525136410307446,6.468045642507295,3.812507770005659,6.464398522611456,3.319451688981963,7.287930384686133,4.861678864217588,11.02783323623335,5.665653805913962,9.685757912560021,4.68560975582342,9.796697225195816,3.952137848096314,8.566988919367283,4.104541318978037,8.632431056337992,3.989472774463853,7.3980316029163,3.756456747573083,6.766602314717695,3.736889245150504,7.046822494578957,3.6653106522267,7.030990339941658,4.792038389727843,10.0691477626996,4.718835428032167,11.42861176101058,5.511206137090078,9.688336467965611,3.740245055181077,8.130946654061839,4.039445307285852,9.149934211266826,3.824731184591515,8.719925750086974,3.572947388488818,6.99012655718467,3.679356879414178,7.231029583801318,3.319003544111647,7.153327207932496],[\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\",\"two.sided\"],[\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\",\"Paired t-test\"],[\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\",\"post and pre\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>.rep<\\/th>\\n      <th>.dgp_name<\\/th>\\n      <th>.method_name<\\/th>\\n      <th>n<\\/th>\\n      <th>mean_diff<\\/th>\\n      <th>sd<\\/th>\\n      <th>statistic<\\/th>\\n      <th>parameter<\\/th>\\n      <th>p.value<\\/th>\\n      <th>conf.int<\\/th>\\n      <th>estimate<\\/th>\\n      <th>null.value<\\/th>\\n      <th>stderr<\\/th>\\n      <th>alternative<\\/th>\\n      <th>method<\\/th>\\n      <th>data.name<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[4,5,6,7,8,9,11,12,13]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\".rep\",\"targets\":1},{\"name\":\".dgp_name\",\"targets\":2},{\"name\":\".method_name\",\"targets\":3},{\"name\":\"n\",\"targets\":4},{\"name\":\"mean_diff\",\"targets\":5},{\"name\":\"sd\",\"targets\":6},{\"name\":\"statistic\",\"targets\":7},{\"name\":\"parameter\",\"targets\":8},{\"name\":\"p.value\",\"targets\":9},{\"name\":\"conf.int\",\"targets\":10},{\"name\":\"estimate\",\"targets\":11},{\"name\":\"null.value\",\"targets\":12},{\"name\":\"stderr\",\"targets\":13},{\"name\":\"alternative\",\"targets\":14},{\"name\":\"method\",\"targets\":15},{\"name\":\"data.name\",\"targets\":16}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\nresults$viz_results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Power plot`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](simulator_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n## Pros & cons\n\n:::: {.columns}\n\n::: {.column}\n::: {.callout-note icon=\"false\"}\n## Pros\n\n-   Automated generation of an interactive R Markdown document (see \n`init_docs()` and `render_docs()` functions);\n-   Beginner friendly;\n-   Computing experimental replicates in parallel easily with future by adding \n`plan(multisession, workers = n_workers)` before \n`run_experiment(experiment, ...)`;\n-   Flexibility of the return fitting results of the simulation (not necessarily the same outputs for all methods);\n-   We can change the evaluation metrics and the visualization without re-fitting all the simulations by saving the fit_results tibble.\n:::\n:::\n\n::: {.column}\n::: {.callout-important icon=\"false\"}\n## Cons\n\n-   Likely not as fast/optimized as some alternatives;\n-   Only save the simulation results computed from the evaluation functions. We \ncannot debug a strange simulation result.\n:::\n:::\n\n::::\n\n\n\n",
    "supporting": [
      "simulator_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}