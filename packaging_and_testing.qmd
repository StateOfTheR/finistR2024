---
title: "Packaging et test, R & Python"
lang: fr
author: 
  - Louis Lacoste
  - Armand Favrot
  - Tristan Mary-Huard
  - Francois Victor
format: html
toc: true
---

## Python packaging

Voici un workflow de développement de package python en intégration continue (CI) à l'aide de git et GitLab.

### 1ère étape: création d'un git repository

-   initialisation du repo \`git init\`\`
-   ajouter un fichier `.gitignore`
-   associer avec un repo sur gitlab avec `git remote add origin`
-   `git push`

### 2ème étape: mise en place des pre-commit hooks

pre-commmit est un package python permettant de maintenir un code de qualité sur le plan de la syntaxe, du formattage du code, et des conventions de nommage. A chaque `git commit`, pre-commit execute une liste de "hooks", qui permettent chacun de vérifier et pointer des erreurs de code.

- installer pre-commit avec `pip install pre-commit`
- créer le fichier `.pre-commit-config.yaml` (à la racine du répertoire git) avec:
```yaml
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer

  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black

  - repo: local
  hooks:
    - id: pylint
      name: pylint
      entry: pylint
      language: system
      types: [python]
      args:
        [
          "-rn",
          "-sn",
          "--load-plugins=pylint.extensions.docparams",
        ]
```

### 3ème étape configuration de la pipeline d'intégration continue (CI)

- créer un fichier `.gitlab-ci.yml`
- ajouter l'image python par défaut et un stage:
```yaml
image: "python:3.8"
stages:
  - linting
```
- ajouter des jobs au stage:
```yaml
black:
  stage: linting
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check --verbose -- .
  tags:
    - docker
pylint:
  stage: linting
  before_script:
    - pip install pylint
  script:
    - find . -type f -name "*.py" |
      xargs pylint
          --disable=import-error
          --load-plugins=pylint.extensions.docparams
```

